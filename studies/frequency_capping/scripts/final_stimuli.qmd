---
title: 'DICE'
subtitle: "How Much Is Enough? Exploring Frequency Capping in Social Media Advertising"
author:
- name: Hauke Roggenkamp
  email: Hauke.Roggenkamp@unisg.ch
  orcid: 0009-0005-5176-4718
  corresponding: true
  affiliations:
    - name: Institute of Behavioral Science and Technology, University of St. Gallen
      address: Torstrasse 25
      city: St. Gallen
      country: Switzerland
      postal-code: 9000
date: now
date-format: long
format: 
  html:
    embed-resources: true
    theme: cosmo
    code-line-numbers: true
toc: false
number-sections: false
fig-cap-location: top
execute:
  echo: false
bibliography: ../../../documentation/references.bib
---


# Setup

```{r}
set.seed(42)
```


## Install Packages

```{r install_packages}
#| warning: false
#| output: false

options(repos = c(CRAN = "https://cran.r-project.org")) 


if (!requireNamespace("groundhog", quietly = TRUE)) {
    install.packages("groundhog")
    library("groundhog")
}

pkgs <- c("magrittr", "data.table", "knitr", "stringr", "lubridate", 
          "ggplot2", "patchwork", "ghibli", "sjPlot", "gtsummary", "psych", "effectsize")

groundhog::groundhog.library(pkg = pkgs,
                             date = "2024-01-01")

rm(pkgs)
```


## Layout

```{r layout}
layout <- theme(panel.background = element_rect(fill = "white"),
                legend.key = element_rect(fill = "white"),
                panel.grid.major.y = element_line(colour = "grey", 
                                                  linewidth = 0.25),
                axis.ticks.y = element_blank(),
                panel.grid.major.x = element_blank(),
                axis.line.x.bottom = element_line(colour = "#000000", 
                                                  linewidth = 0.5),
                axis.line.y.left = element_blank(),
                plot.title = element_text(size = rel(1))
)
```

```{r colors}

c_coral     <- "#f27981"
c_yellow    <- "#F2EA79"
c_turquoise <- "#79f2ea"
c_purple    <- "#7981f2"

scale_color_custom_d <- function() {
  scale_color_manual(values = c(c_purple, c_coral, c_turquoise, c_yellow))
}
scale_fill_custom_d <- function() {
  scale_fill_manual(values = c(c_purple, c_coral, c_turquoise, c_yellow))
}
```

## Read Data

```{r read_tweets}
tweet_files <- list.files(path = "../stimuli/LLM-generated",
                          pattern = "brazil")
dt_list <- list()
i <- 1
for(file in tweet_files){
  tmp <- data.table::fread(paste0("../stimuli/LLM-generated/", file))
  dt_list[[i]] <- tmp
  i <- i + 1
}

tweets <- data.table::rbindlist(l = dt_list)[nchar(text) < 300]

# rm(list = c("tmp", "i", "tweet_files", "file", "dt_list"))
```

```{r read_usernames}
usernames <- data.table::fread("../stimuli/LLM-generated/users_1718529967.csv")
```


# Data Manipulation

```{r}
length <- nrow(usernames)
random_draw <- sample(x = tweets[, .N], size = length, replace = FALSE)
```


```{r}
tmp <- cbind(tweets[random_draw],
             usernames)
```

```{r}
doc_id <- seq(from = 1, to = length, by = 1)
sequence <- c(1, 2, 3, seq(from = 5, to = length + 1, by = 1))
datetime <- format(seq(from = lubridate::now(), 
                        by = "3 mins",
                        length.out = length),
                    "%d.%m.%y %H:%M")
likes <-  as.integer(runif(n = length, min = 0, max = 42))
reposts <-  as.integer(runif(n = length, min = 0, max = 9))
replies <-  as.integer(runif(n = length, min = 0, max = 24))
user_followers <- as.integer(rnorm(n = length, mean = 400, sd = 200))
user_followers[user_followers < 0] <- 42
```

```{r sponsored_post}
# https://www.facebook.com/ads/library/?id=985477502791322
ad_copy <- "The best nutrition for your baby. Delivered frozen to your doorstep!<br>
🥦 Veggie-forward, balanced meals<br>
💪 Half the sugar and twice the protein & healthy fats of most pouches<br>
💯% daily nutrition — based on USDA’s Birth to 24 Guidelines<br>
🥜 May help prevent food allergies by introducing allergens often + as early as 4-6 months<br>
🌎 Award-winning, sustainable packaging<br>
👩‍ Women-owned. Mom & dietitian-founded"

sponsored_post <- data.table(doc_id = 9999,
                             datetime = format(lubridate::now() - 1, "%d.%m.%y %H:%M"),
                             text = ad_copy,
                             media = "https://scontent-zrh1-1.xx.fbcdn.net/v/t39.35426-6/444228106_1004969034341137_5831270106744356527_n.jpg?stp=dst-jpg_s600x600&_nc_cat=105&ccb=1-7&_nc_sid=c53f8f&_nc_ohc=hMX18DDIxm8Q7kNvgFcCxPw&_nc_ht=scontent-zrh1-1.xx&oh=00_AYCg87fBhoM1cZXUOLM7TR7aX1iM35R2VyQFwCd6ByLrPg&oe=666E30F4",
                             alt_text = "A promotional image featuring an assortment of food items and a product with a purity award from the Clean Label Project. Displayed are sliced zucchini, an apple, a roasted chicken leg, a jar of green sauce, sliced coconut, a wooden spoon with yogurt, and turmeric.",
                             likes = 42,
                             reposts = 12,
                             replies = 0,
                             username = "Square Baby",
                             handle = "SquareBabyFood",
                             user_description = "The only organic baby food offering 💯% Daily Nutrition and a comprehensive Allergen Introduction Menu. Customized to your kiddo 👶. Fresh, organic, delivered.",
                             user_image = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSmfrfojh946-1MF8b60I2ixREUL_6pQjAC6w&s",
                             user_followers = 133,
                             commented_post = 0,
                             sponsored = 1,
                             target = "https://squarebaby.com/",
                             condition = "A",
                             sequence = 4)
```

```{r}
stimuli <- rbind(sponsored_post,
                 data.table(doc_id,
                            datetime,
                            text = tmp$text,
                            media = NA,
                            alt_text = NA,
                            likes,
                            reposts,
                            replies,
                            username = tmp$username,
                            handle = tmp$handle,
                            user_description = tmp$user_description,
                            user_image = tmp$user_image,
                            user_followers,
                            commented_post = 0,
                            sponsored = 0,
                            target = NA,
                            condition = "A",
                            sequence = NA)) # sequence))

setorder(stimuli, sequence)
stimuli[, doc_id := 1:.N]
```

# Write Data

```{r}
data.table::fwrite(stimuli, file = "../stimuli/brazil_june.csv", sep = ";")
```



# Session Info

```{r session_info}
sessionInfo()
```

